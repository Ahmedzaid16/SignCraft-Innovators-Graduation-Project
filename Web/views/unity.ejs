<!DOCTYPE html>
<html lang="en-us">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Unity WebGL Player</title>
  </head>
  <body>
    <div id="unity-container">
      <canvas id="unity-canvas"></canvas>
    </div>
    <style>
      /* Adjust the size of the Unity container */
      #unity-container {
        width: 400px;
        height: 500px;
        margin: auto; /* Centers the container horizontally */
      }

      /* Adjust the size of the Unity canvas */
      #unity-canvas {
        width: 100%;
        height: 100%;
        display: block; /* Ensures the canvas expands to fill its container */
      }
    </style>
    <script>
      // Ensure the UnityInstance object is available globally
      var UnityInstance;

      // Function to initialize Unity
      function initializeUnity() {
        var canvas = document.querySelector("#unity-canvas");
        var buildUrl = "/animation/Build";
        var loaderUrl = buildUrl + "/test5.loader.js";
        var config = {
          dataUrl: buildUrl + "/test5.data",
          frameworkUrl: buildUrl + "/test5.framework.js",
          codeUrl: buildUrl + "/test5.wasm",
          streamingAssetsUrl: "StreamingAssets",
          companyName: "signlang",
          productName: "signlang",
          productVersion: "1.0",
        };

        // Load the loader script
        var script = document.createElement("script");
        script.src = loaderUrl;
        script.onload = () => {
          createUnityInstance(canvas, config, (progress) => {
            console.log(`Loading progress: ${progress * 100}%`);
          })
            .then((unityInstance) => {
              UnityInstance = unityInstance;
              // Add message event listener to receive messages from the parent window
              window.addEventListener("message", (event) => {
                var message = event.data;
                console.log(message);
                if (message === "START_RECORDING") {
                  // Stop Unity
                  UnityInstance.Quit().then(function () {
                    console.log("Unity quit successfully");
                    UnityInstance = null;
                  });
                } else if (typeof message === "string") {
                  UnityInstance.SendMessage(
                    "Ch09_nonPBR",
                    "StartPlayAnimationThenReset",
                    message
                  );
                }
              });
            })
            .catch((error) => {
              console.error("Failed to initialize Unity:", error);
            });
        };

        document.body.appendChild(script);
      }

      // Initialize Unity when DOM content is loaded
      document.addEventListener("DOMContentLoaded", initializeUnity);
    </script>
  </body>
</html>
